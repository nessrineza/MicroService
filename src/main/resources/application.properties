
server.address=0.0.0.0
spring.application.name=user-service
eureka.client.serviceUrl.defaultzone= http://localhost:8761/eureka/
#eureka.client.serviceUrl.defaultzone= http://192.168.43.217:8761/eureka/
eureka.client.register-with-eureka=true
#server.port=8099
server.port=8099
server.servlet.context-path=/Go4dev/user-service


spring.main.banner-mode=off


###spring.datasource.url=jdbc:mysql://localhost:3306/user-service?useUnicode=true&useJDBCCompliantTimezoneShift=true&createDatabaseIfNotExist=true&useLegacyDatetimeCode=false&serverTimezone=UTC
###spring.datasource.username=root
###spring.datasource.password=
### JPA / HIBERNATE ##s#
###spring.jpa.show-sql=true
###spring.jpa.hibernate.ddl-auto=update
###spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# Datasource
#jdbc:h2:~/test     jdbc:h2:mem:testdb
spring.datasource.url=jdbc:h2:~/user-service
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto= create-drop
spring.cloud.config.import-check.enabled=false
spring.cloud.config.fail-fast=true


### If you're using Hibernate to generate your database schema, you can configure it to
### automatically escape table names. This can be done by setting
### the hibernate.globally_quoted_identifiers property to true in your Hibernate configuration.
### Here's an example of how to do this in your application.properties or application.yml file:
###This will make Hibernate automatically quote all table names, allowing you to use reserved keywords.
###Choose the option that best fits your application's requirements and configuration.

spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.h2.console.enabled=true
spring.h2.console.path=/h2
### Configure Hibernate to escape table names:















spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

myApp.file.forgotPassword_HTML =./src/main/resources/user/html/forgot-password.html
myApp.file.ConfirmMail_HTML =./src/main/resources/user/html/verify-mail-correct.html
myApp.file.defaultUserPhoto =./src/main/resources/user/img/user.png
#home page web
myApp.link.WebPage=http://localhost:4200
myApp.link.Path.signIn=/sign-in
myApp.link.Path.update_password_forgot=/update-password-forgot
myApp.link.Path.error=/page-error
#home service user
myApp.link.GlobalBackEnd=http://localhost:8088
#home atachement user
myApp.link.Path.AttachementDowload =/attachment/download/
192.168.43.217